<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:genm="clr-namespace:Genm.WPF.Controls;assembly=Genm.WPF"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:viewbase="clr-namespace:GenmCloud.Core.UserControls.ViewBases">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Genm.WPF;component/Styles/Converter/Converter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GenmCloud.Core;component/Resources/Converters/Converter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="OverlayBackground" Color="#3F000000" />

    <!--#region DropShadowEffect-->
    <DropShadowEffect
        x:Key="EffectShadowCom"
        BlurRadius="10"
        Direction="270"
        Opacity=".1"
        RenderingBias="Performance"
        ShadowDepth="1"
        Color="{StaticResource EffectShadowColor}" />
    <!--#endregion-->

    <!--#region Brush-->
    <SolidColorBrush
        x:Key="TMS_BorderBrush"
        o:Freeze="True"
        Color="#10000000" />
    <SolidColorBrush
        x:Key="TMS_TransparencyRegionBrush"
        o:Freeze="True"
        Color="#01FFFFFF" />

    <DropShadowEffect
        x:Key="GenmShadow"
        BlurRadius="12"
        Direction="270"
        Opacity=".3"
        RenderingBias="Performance"
        ShadowDepth="1"
        Color="{StaticResource EffectShadowColor}" />

    <LinearGradientBrush x:Key="PrimaryGradualBrush" o:Freeze="true" StartPoint="0, 0.5" EndPoint="8, 0.5">
        <GradientStop Offset="0" Color="{DynamicResource PrimaryColor}" />
        <GradientStop Offset="1" Color="White" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DangerGradualBrush" o:Freeze="true" StartPoint="0, 0.5" EndPoint="8, 0.5">
        <GradientStop Offset="0" Color="{DynamicResource DangerColor}" />
        <GradientStop Offset="1" Color="White" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="InfoGradualBrush" o:Freeze="true" StartPoint="0, 0.5" EndPoint="8, 0.5">
        <GradientStop Offset="0" Color="{DynamicResource InfoColor}" />
        <GradientStop Offset="1" Color="White" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WarningGradualBrush" o:Freeze="true" StartPoint="0, 0.5" EndPoint="8, 0.5">
        <GradientStop Offset="0" Color="{DynamicResource WarningColor}" />
        <GradientStop Offset="1" Color="White" />
    </LinearGradientBrush>
    <!--#endregion-->

    <!--#region Font-->
    <FontFamily x:Key="FIconFontFamily">pack://application:,,,/GenmCloud.Core;component/Resources/Icon/#GenmCloudIconFont</FontFamily>
    <FontFamily x:Key="FIconPlusFontFamily">/Resources/Fonts/Plus/#iconfont</FontFamily>
    <FontFamily x:Key="MenuIconFontFamily">/Resources/Fonts/Menu/#iconfont</FontFamily>
    <FontFamily x:Key="DocIconFontFamily">/Resources/Fonts/Plus/Doc/#iconfont</FontFamily>
    <FontFamily x:Key="SurfaceIconFontFamily">/Resources/Fonts/Plus/Surface/#iconfont</FontFamily>
    <FontFamily x:Key="AppIconFontFamily">/Resources/Fonts/Plus/App/#iconfont</FontFamily>
    <!--#endregion-->

    <!--#region Button-->
    <Style
        x:Key="WindowFuncBtnBaseStyle"
        BasedOn="{StaticResource ButtonCustom}"
        TargetType="Button">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource FIconFontFamily}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#01FFFFFF" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style
        x:Key="WindowMaxBtnStyle"
        BasedOn="{StaticResource WindowFuncBtnBaseStyle}"
        TargetType="Button">
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="#5FC0C0C0" />
        <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground" Value="#5FC0C0C0" />
    </Style>

    <Style
        x:Key="WindowMinBtnStyle"
        BasedOn="{StaticResource WindowFuncBtnBaseStyle}"
        TargetType="Button">
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="#5FC0C0C0" />
        <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground" Value="#5FC0C0C0" />
    </Style>

    <Style
        x:Key="WindowCloseBtnStyle"
        BasedOn="{StaticResource WindowFuncBtnBaseStyle}"
        TargetType="Button">
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="#BFFF0000" />
        <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground" Value="#BFFF0000" />
    </Style>

    <Style
        x:Key="Genm_ListBoxCustom"
        BasedOn="{StaticResource ListBoxCustom}"
        TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>


    <Style x:Key="RadioBtnCustom" TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <hc:SimplePanel
                        x:Name="templateRoot"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#d6e4ff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnCustomStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="TextBtnStyle"
        BasedOn="{StaticResource BtnCustomStyle}"
        TargetType="Button" />

    <Style x:Key="TextEditorCustom" TargetType="avalonedit:TextEditor">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="ShowLineNumbers" Value="True" />
        <Setter Property="LineNumbersForeground" Value="{DynamicResource EditorLineNumbersForeground}" />
        <Setter Property="Foreground" Value="{DynamicResource EditorForeground}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="avalonedit:TextEditor">
                    <ControlTemplate.Resources>
                        <Style TargetType="avalonedit:TextView">
                            <Setter Property="NonPrintableCharacterBrush" Value="{DynamicResource EditorNonPrintableCharacterBrush}" />
                            <Setter Property="LinkTextForegroundBrush" Value="{DynamicResource EditorLinkTextForegroundBrush}" />
                            <Setter Property="LinkTextBackgroundBrush" Value="{DynamicResource EditorLinkTextBackgroundBrush}" />
                        </Style>
                        <Style TargetType="avalonedit:TextArea">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="SelectionBrush" Value="{DynamicResource EditorSelectionBrush}" />
                            <Setter Property="SelectionBorder">
                                <Setter.Value>
                                    <Pen Brush="{DynamicResource EditorSelectionBorder}" Thickness="1" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="SelectionCornerRadius" Value="0" />
                            <Setter Property="SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="avalonedit:TextArea">
                                        <DockPanel Focusable="False">
                                            <ItemsControl
                                                DockPanel.Dock="Left"
                                                Focusable="False"
                                                ItemsSource="{Binding LeftMargins, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            <ContentPresenter
                                                Panel.ZIndex="-1"
                                                Content="{Binding TextView, RelativeSource={RelativeSource TemplatedParent}}"
                                                Focusable="False" />
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer
                            Name="PART_ScrollViewer"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="Left"
                            VerticalContentAlignment="Top"
                            CanContentScroll="True"
                            Content="{Binding TextArea, RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WordWrap" Value="True">
                            <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  region AvalonEdit Color  -->

    <Color x:Key="ControlAccentColorKey">#1ba1e2</Color>
    <Color x:Key="EditorBackgroundColor">White</Color>
    <Color x:Key="EditorForegroundColor">Black</Color>
    <Color x:Key="EditorLineNumbersForegroundColor">Black</Color>
    <Color x:Key="EditorNonPrintableCharacterColor">#3F8080FF</Color>
    <Color x:Key="EditorLinkTextForegroundColor">#FF4040FF</Color>
    <Color x:Key="EditorLinkTextBackgroundColor">#00000000</Color>

    <!--  endregion  -->

    <!--  region AvalonEdit Brush  -->

    <SolidColorBrush
        x:Key="ControlAccentBrushKey"
        o:Freeze="True"
        Color="{DynamicResource ControlAccentColorKey}" />
    <SolidColorBrush
        x:Key="EditorBackground"
        o:Freeze="True"
        Color="{DynamicResource EditorBackgroundColor}" />
    <SolidColorBrush
        x:Key="EditorForeground"
        o:Freeze="True"
        Color="{DynamicResource EditorForegroundColor}" />
    <SolidColorBrush
        x:Key="EditorLineNumbersForeground"
        o:Freeze="True"
        Color="{DynamicResource EditorLineNumbersForegroundColor}" />
    <SolidColorBrush
        x:Key="EditorSelectionBrush"
        o:Freeze="True"
        Opacity="0.75"
        Color="{DynamicResource ControlAccentColorKey}" />
    <SolidColorBrush
        x:Key="EditorSelectionBorder"
        o:Freeze="True"
        Opacity="0.75"
        Color="{DynamicResource ControlAccentColorKey}" />
    <SolidColorBrush
        x:Key="EditorNonPrintableCharacterBrush"
        o:Freeze="True"
        Color="{DynamicResource EditorNonPrintableCharacterColor}" />
    <SolidColorBrush
        x:Key="EditorLinkTextForegroundBrush"
        o:Freeze="True"
        Color="{DynamicResource EditorLinkTextForegroundColor}" />
    <SolidColorBrush
        x:Key="EditorLinkTextBackgroundBrush"
        o:Freeze="True"
        Color="{DynamicResource EditorLinkTextBackgroundColor}" />
    <!--  endregion  -->


    <!--#region Dialog Style-->
    <DropShadowEffect
        x:Key="DialogShadow"
        BlurRadius="8"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="1"
        Color="{StaticResource EffectShadowColor}" />
    <Style TargetType="genm:DataDialog">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="genm:DataDialog">
                    <hc:SimplePanel Width="400" Margin="5">
                        <Border Background="White" CornerRadius="5" />
                        <Grid Margin="20,10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="18"
                                Text="{TemplateBinding Title}" />
                            <Button
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Command="{TemplateBinding CloseCmd}"
                                Content="&#xe60c;"
                                FontFamily="{StaticResource FIconFontFamily}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource TextBtnStyle}" TargetType="Button">
                                        <Setter Property="Foreground" Value="#c3c3c3" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <StackPanel
                                Grid.Row="1"
                                Margin="0,30"
                                VerticalAlignment="Center">
                                <ContentPresenter />
                            </StackPanel>
                            <StackPanel
                                Grid.Row="2"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                                <Button
                                    Width="55"
                                    Height="30"
                                    Margin="0,0,10,0"
                                    Command="{TemplateBinding NegativeCmd}"
                                    Cursor="Hand"
                                    FontSize="14">
                                    <TextBlock Text="{TemplateBinding NegativeText}" />
                                </Button>
                                <Button
                                    Width="55"
                                    Height="30"
                                    Command="{TemplateBinding PositiveCmd}"
                                    Cursor="Hand"
                                    FontSize="14"
                                    Style="{DynamicResource ButtonPrimary}">
                                    <TextBlock Text="{TemplateBinding PositiveText}" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region DropShadowEffect-->
    <DropShadowEffect
        x:Key="MenuShadowCom"
        BlurRadius="8"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="1"
        Color="{StaticResource EffectShadowColor}" />
    <!--#endregion-->


    <Style x:Key="ContextMenuBaseStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalOffset" Value="-4" />
        <Setter Property="VerticalOffset" Value="-16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Margin="8"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Effect="{StaticResource MenuShadowCom}">
                        <ScrollViewer Margin="0,6" Style="{StaticResource ScrollViewerUpDown}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemBaseStyle" TargetType="MenuItem">
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="hc:ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                        x:Name="Bd"
                        MinWidth="240"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid x:Name="Grid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="GlyphPanel"
                                Grid.Column="0"
                                Width="16"
                                Height="16"
                                Margin="0,0,10,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="{DynamicResource PrimaryBrush}"
                                ClipToBounds="False"
                                CornerRadius="2"
                                Visibility="Collapsed">
                                <Path
                                    Width="12"
                                    Height="12"
                                    Data="{StaticResource CheckedGeometry}"
                                    Stretch="Uniform"
                                    Stroke="{DynamicResource TextIconBrush}"
                                    StrokeThickness="2"
                                    UseLayoutRounding="True" />
                            </Border>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="0,3"
                                ContentSource="Header"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="TreeViewBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="TreeView">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="hc:ScrollViewer.IsInertiaEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <hc:ToggleBlock
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <hc:ToggleBlock.CheckedContent>
                                <hc:ScrollViewer
                                    x:Name="_tv_scrollviewer_"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    CanContentScroll="false"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsInertiaEnabled="{Binding Path=(hc:ScrollViewer.IsInertiaEnabled), RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Template="{StaticResource ScrollViewerBaseControlTemplate}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter />
                                </hc:ScrollViewer>
                            </hc:ToggleBlock.CheckedContent>
                            <hc:ToggleBlock.UnCheckedContent>
                                <hc:Empty />
                            </hc:ToggleBlock.UnCheckedContent>
                        </hc:ToggleBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListViewItemCustom" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <StackPanel>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <hc:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Orientation="Horizontal">
                                <ContentPresenter
                                    Name="ContentPresenterMain"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                    </hc:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ToggleButtonCustom"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="Chrome"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}"
                        SnapsToDevicePixels="true">
                        <hc:SimplePanel>
                            <ContentPresenter
                                Name="UnCheckedElement"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter
                                Name="CheckedElement"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{Binding Path=(hc:StatusSwitchElement.CheckedElement), RelativeSource={RelativeSource TemplatedParent}}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                        </hc:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="hc:StatusSwitchElement.HideUncheckedElement" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="UnCheckedElement" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackgroundBtnStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#646a73" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="2,4" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="4" />
        <Setter Property="Background" Value="{StaticResource TMS_TransparencyRegionBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <hc:SimplePanel>
                        <Border
                            x:Name="Btnborder"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </hc:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Btnborder" Property="Background" Value="{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ButtonPrimaryCustomStyle"
        BasedOn="{StaticResource ButtonCustom}"
        TargetType="Button">
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="4" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Foreground" Value="#3370ff" />
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="#e1eaff" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
</ResourceDictionary>